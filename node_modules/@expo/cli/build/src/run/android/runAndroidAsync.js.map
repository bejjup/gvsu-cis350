{"version":3,"sources":["../../../../src/run/android/runAndroidAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { resolveInstallApkNameAsync } from './resolveInstallApkName';\nimport { Options, ResolvedOptions, resolveOptionsAsync } from './resolveOptions';\nimport { exportEagerAsync } from '../../export/embed/exportEager';\nimport { Log } from '../../log';\nimport type { AndroidOpenInCustomProps } from '../../start/platforms/android/AndroidPlatformManager';\nimport { assembleAsync, installAsync } from '../../start/platforms/android/gradle';\nimport { CommandError } from '../../utils/errors';\nimport { setNodeEnv } from '../../utils/nodeEnv';\nimport { ensurePortAvailabilityAsync } from '../../utils/port';\nimport { getSchemesForAndroidAsync } from '../../utils/scheme';\nimport { ensureNativeProjectAsync } from '../ensureNativeProject';\nimport { logProjectLogsLocation } from '../hints';\nimport { startBundlerAsync } from '../startBundler';\n\nconst debug = require('debug')('expo:run:android');\n\nexport async function runAndroidAsync(projectRoot: string, { install, ...options }: Options) {\n  // NOTE: This is a guess, the developer can overwrite with `NODE_ENV`.\n  const isProduction = options.variant?.toLowerCase().endsWith('release');\n  setNodeEnv(isProduction ? 'production' : 'development');\n  require('@expo/env').load(projectRoot);\n\n  await ensureNativeProjectAsync(projectRoot, { platform: 'android', install });\n\n  const props = await resolveOptionsAsync(projectRoot, options);\n\n  debug('Package name: ' + props.packageName);\n  Log.log('› Building app...');\n\n  const androidProjectRoot = path.join(projectRoot, 'android');\n\n  if (!options.binary) {\n    let eagerBundleOptions: string | undefined;\n\n    if (isProduction) {\n      eagerBundleOptions = JSON.stringify(\n        await exportEagerAsync(projectRoot, {\n          dev: false,\n          platform: 'android',\n        })\n      );\n    }\n\n    await assembleAsync(androidProjectRoot, {\n      variant: props.variant,\n      port: props.port,\n      appName: props.appName,\n      buildCache: props.buildCache,\n      architectures: props.architectures,\n      eagerBundleOptions,\n    });\n\n    // Ensure the port hasn't become busy during the build.\n    if (props.shouldStartBundler && !(await ensurePortAvailabilityAsync(projectRoot, props))) {\n      props.shouldStartBundler = false;\n    }\n  }\n\n  const manager = await startBundlerAsync(projectRoot, {\n    port: props.port,\n    // If a scheme is specified then use that instead of the package name.\n    scheme: (await getSchemesForAndroidAsync(projectRoot))?.[0],\n    headless: !props.shouldStartBundler,\n  });\n\n  if (options.binary) {\n    // Attempt to install the APK from the file path\n    const binaryPath = path.join(options.binary);\n\n    if (!fs.existsSync(binaryPath)) {\n      throw new CommandError(`The path to the custom Android binary does not exist: ${binaryPath}`);\n    }\n    Log.log(chalk.gray`\\u203A Installing ${binaryPath}`);\n    await props.device.installAppAsync(binaryPath);\n  } else {\n    await installAppAsync(androidProjectRoot, props);\n  }\n\n  await manager.getDefaultDevServer().openCustomRuntimeAsync<AndroidOpenInCustomProps>(\n    'emulator',\n    {\n      applicationId: props.packageName,\n      customAppId: props.customAppId,\n      launchActivity: props.launchActivity,\n    },\n    { device: props.device.device }\n  );\n\n  if (props.shouldStartBundler) {\n    logProjectLogsLocation();\n  } else {\n    await manager.stopAsync();\n  }\n}\n\nasync function installAppAsync(androidProjectRoot: string, props: ResolvedOptions) {\n  // Find the APK file path\n  const apkFile = await resolveInstallApkNameAsync(props.device.device, props);\n\n  if (apkFile) {\n    // Attempt to install the APK from the file path\n    const binaryPath = path.join(props.apkVariantDirectory, apkFile);\n    Log.log(chalk.gray`\\u203A Installing ${binaryPath}`);\n    await props.device.installAppAsync(binaryPath);\n  } else {\n    // If we cannot resolve the APK file path then we can attempt to install using Gradle.\n    // This offers more advanced resolution that we may not have first class support for.\n    Log.log('› Failed to locate binary file, installing with Gradle...');\n    await installAsync(androidProjectRoot, {\n      variant: props.variant ?? 'debug',\n      appName: props.appName ?? 'app',\n      port: props.port,\n    });\n  }\n}\n"],"names":["runAndroidAsync","debug","require","projectRoot","install","options","isProduction","variant","toLowerCase","endsWith","setNodeEnv","load","ensureNativeProjectAsync","platform","props","resolveOptionsAsync","packageName","Log","log","androidProjectRoot","path","join","binary","eagerBundleOptions","JSON","stringify","exportEagerAsync","dev","assembleAsync","port","appName","buildCache","architectures","shouldStartBundler","ensurePortAvailabilityAsync","manager","startBundlerAsync","scheme","getSchemesForAndroidAsync","headless","binaryPath","fs","existsSync","CommandError","chalk","gray","device","installAppAsync","getDefaultDevServer","openCustomRuntimeAsync","applicationId","customAppId","launchActivity","logProjectLogsLocation","stopAsync","apkFile","resolveInstallApkNameAsync","apkVariantDirectory","installAsync"],"mappings":"AAAA;;;;+BAoBsBA,iBAAe;;aAAfA,eAAe;;;8DApBnB,OAAO;;;;;;;8DACV,IAAI;;;;;;;8DACF,MAAM;;;;;;uCAEoB,yBAAyB;gCACN,kBAAkB;6BAC/C,gCAAgC;qBAC7C,WAAW;wBAEa,sCAAsC;wBACrD,oBAAoB;yBACtB,qBAAqB;sBACJ,kBAAkB;wBACpB,oBAAoB;qCACrB,wBAAwB;uBAC1B,UAAU;8BACf,iBAAiB;;;;;;AAEnD,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC,AAAC;AAE5C,eAAeF,eAAe,CAACG,WAAmB,EAAE,EAAEC,OAAO,CAAA,EAAE,GAAGC,OAAO,EAAW,EAAE;QAEtEA,GAAe,EA2C1B,IAA8C;IA5CxD,sEAAsE;IACtE,MAAMC,YAAY,GAAGD,CAAAA,GAAe,GAAfA,OAAO,CAACE,OAAO,SAAa,GAA5BF,KAAAA,CAA4B,GAA5BA,GAAe,CAAEG,WAAW,EAAE,CAACC,QAAQ,CAAC,SAAS,CAAC,AAAC;IACxEC,IAAAA,QAAU,WAAA,EAACJ,YAAY,GAAG,YAAY,GAAG,aAAa,CAAC,CAAC;IACxDJ,OAAO,CAAC,WAAW,CAAC,CAACS,IAAI,CAACR,WAAW,CAAC,CAAC;IAEvC,MAAMS,IAAAA,oBAAwB,yBAAA,EAACT,WAAW,EAAE;QAAEU,QAAQ,EAAE,SAAS;QAAET,OAAO;KAAE,CAAC,CAAC;IAE9E,MAAMU,KAAK,GAAG,MAAMC,IAAAA,eAAmB,oBAAA,EAACZ,WAAW,EAAEE,OAAO,CAAC,AAAC;IAE9DJ,KAAK,CAAC,gBAAgB,GAAGa,KAAK,CAACE,WAAW,CAAC,CAAC;IAC5CC,IAAG,IAAA,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAE7B,MAAMC,kBAAkB,GAAGC,KAAI,EAAA,QAAA,CAACC,IAAI,CAAClB,WAAW,EAAE,SAAS,CAAC,AAAC;IAE7D,IAAI,CAACE,OAAO,CAACiB,MAAM,EAAE;QACnB,IAAIC,kBAAkB,AAAoB,AAAC;QAE3C,IAAIjB,YAAY,EAAE;YAChBiB,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CACjC,MAAMC,IAAAA,YAAgB,iBAAA,EAACvB,WAAW,EAAE;gBAClCwB,GAAG,EAAE,KAAK;gBACVd,QAAQ,EAAE,SAAS;aACpB,CAAC,CACH,CAAC;QACJ,CAAC;QAED,MAAMe,IAAAA,OAAa,cAAA,EAACT,kBAAkB,EAAE;YACtCZ,OAAO,EAAEO,KAAK,CAACP,OAAO;YACtBsB,IAAI,EAAEf,KAAK,CAACe,IAAI;YAChBC,OAAO,EAAEhB,KAAK,CAACgB,OAAO;YACtBC,UAAU,EAAEjB,KAAK,CAACiB,UAAU;YAC5BC,aAAa,EAAElB,KAAK,CAACkB,aAAa;YAClCT,kBAAkB;SACnB,CAAC,CAAC;QAEH,uDAAuD;QACvD,IAAIT,KAAK,CAACmB,kBAAkB,IAAI,CAAE,MAAMC,IAAAA,KAA2B,4BAAA,EAAC/B,WAAW,EAAEW,KAAK,CAAC,AAAC,EAAE;YACxFA,KAAK,CAACmB,kBAAkB,GAAG,KAAK,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAME,OAAO,GAAG,MAAMC,IAAAA,aAAiB,kBAAA,EAACjC,WAAW,EAAE;QACnD0B,IAAI,EAAEf,KAAK,CAACe,IAAI;QAChB,sEAAsE;QACtEQ,MAAM,EAAE,CAAA,IAA8C,GAA7C,MAAMC,IAAAA,OAAyB,0BAAA,EAACnC,WAAW,CAAC,SAAM,GAAnD,KAAA,CAAmD,GAAnD,IAA8C,AAAE,CAAC,CAAC,CAAC;QAC3DoC,QAAQ,EAAE,CAACzB,KAAK,CAACmB,kBAAkB;KACpC,CAAC,AAAC;IAEH,IAAI5B,OAAO,CAACiB,MAAM,EAAE;QAClB,gDAAgD;QAChD,MAAMkB,UAAU,GAAGpB,KAAI,EAAA,QAAA,CAACC,IAAI,CAAChB,OAAO,CAACiB,MAAM,CAAC,AAAC;QAE7C,IAAI,CAACmB,GAAE,EAAA,QAAA,CAACC,UAAU,CAACF,UAAU,CAAC,EAAE;YAC9B,MAAM,IAAIG,OAAY,aAAA,CAAC,CAAC,sDAAsD,EAAEH,UAAU,CAAC,CAAC,CAAC,CAAC;QAChG,CAAC;QACDvB,IAAG,IAAA,CAACC,GAAG,CAAC0B,MAAK,EAAA,QAAA,CAACC,IAAI,CAAC,kBAAkB,EAAEL,UAAU,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM1B,KAAK,CAACgC,MAAM,CAACC,eAAe,CAACP,UAAU,CAAC,CAAC;IACjD,OAAO;QACL,MAAMO,eAAe,CAAC5B,kBAAkB,EAAEL,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,MAAMqB,OAAO,CAACa,mBAAmB,EAAE,CAACC,sBAAsB,CACxD,UAAU,EACV;QACEC,aAAa,EAAEpC,KAAK,CAACE,WAAW;QAChCmC,WAAW,EAAErC,KAAK,CAACqC,WAAW;QAC9BC,cAAc,EAAEtC,KAAK,CAACsC,cAAc;KACrC,EACD;QAAEN,MAAM,EAAEhC,KAAK,CAACgC,MAAM,CAACA,MAAM;KAAE,CAChC,CAAC;IAEF,IAAIhC,KAAK,CAACmB,kBAAkB,EAAE;QAC5BoB,IAAAA,MAAsB,uBAAA,GAAE,CAAC;IAC3B,OAAO;QACL,MAAMlB,OAAO,CAACmB,SAAS,EAAE,CAAC;IAC5B,CAAC;AACH,CAAC;AAED,eAAeP,eAAe,CAAC5B,kBAA0B,EAAEL,KAAsB,EAAE;IACjF,yBAAyB;IACzB,MAAMyC,OAAO,GAAG,MAAMC,IAAAA,sBAA0B,2BAAA,EAAC1C,KAAK,CAACgC,MAAM,CAACA,MAAM,EAAEhC,KAAK,CAAC,AAAC;IAE7E,IAAIyC,OAAO,EAAE;QACX,gDAAgD;QAChD,MAAMf,UAAU,GAAGpB,KAAI,EAAA,QAAA,CAACC,IAAI,CAACP,KAAK,CAAC2C,mBAAmB,EAAEF,OAAO,CAAC,AAAC;QACjEtC,IAAG,IAAA,CAACC,GAAG,CAAC0B,MAAK,EAAA,QAAA,CAACC,IAAI,CAAC,kBAAkB,EAAEL,UAAU,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM1B,KAAK,CAACgC,MAAM,CAACC,eAAe,CAACP,UAAU,CAAC,CAAC;IACjD,OAAO;QACL,sFAAsF;QACtF,qFAAqF;QACrFvB,IAAG,IAAA,CAACC,GAAG,CAAC,2DAA2D,CAAC,CAAC;QACrE,MAAMwC,IAAAA,OAAY,aAAA,EAACvC,kBAAkB,EAAE;YACrCZ,OAAO,EAAEO,KAAK,CAACP,OAAO,IAAI,OAAO;YACjCuB,OAAO,EAAEhB,KAAK,CAACgB,OAAO,IAAI,KAAK;YAC/BD,IAAI,EAAEf,KAAK,CAACe,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;AACH,CAAC"}