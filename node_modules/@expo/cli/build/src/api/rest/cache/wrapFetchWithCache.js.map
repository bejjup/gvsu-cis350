{"version":3,"sources":["../../../../../src/api/rest/cache/wrapFetchWithCache.ts"],"sourcesContent":["import { Response, type RequestInfo, type RequestInit } from 'undici';\n\nimport { getRequestCacheKey, getResponseInfo, type ResponseCache } from './ResponseCache';\nimport type { FetchLike } from '../client.types';\n\nconst debug = require('debug')('expo:undici-cache');\n\nexport function wrapFetchWithCache(fetch: FetchLike, cache: ResponseCache): FetchLike {\n  return async function cachedFetch(url: RequestInfo, init?: RequestInit) {\n    const cacheKey = getRequestCacheKey(url, init);\n    const cachedResponse = await cache.get(cacheKey);\n    if (cachedResponse) {\n      return new Response(cachedResponse.body, cachedResponse.info);\n    }\n\n    await lock(cacheKey);\n\n    try {\n      // Retry loading from cache, in case it was stored during the lock\n      let cachedResponse = await cache.get(cacheKey);\n      if (cachedResponse) {\n        return new Response(cachedResponse.body, cachedResponse.info);\n      }\n\n      // Execute the fetch request\n      const response = await fetch(url, init);\n      if (!response.ok || !response.body) {\n        return response;\n      }\n\n      // Cache the response\n      cachedResponse = await cache.set(cacheKey, {\n        body: response.body,\n        info: getResponseInfo(response),\n      });\n\n      // Warn through debug logs that caching failed\n      if (!cachedResponse) {\n        debug(`Failed to cache response for: ${url}`);\n        await cache.remove(cacheKey);\n        return response;\n      }\n\n      // Return the cached response\n      return new Response(cachedResponse.body, cachedResponse.info);\n    } finally {\n      unlock(cacheKey);\n    }\n  };\n}\n\nconst lockPromiseForKey: Record<string, Promise<any>> = {};\nconst unlockFunctionForKey: Record<string, any> = {};\n\nasync function lock(key: string) {\n  if (!lockPromiseForKey[key]) {\n    lockPromiseForKey[key] = Promise.resolve();\n  }\n\n  const takeLockPromise = lockPromiseForKey[key];\n  lockPromiseForKey[key] = takeLockPromise.then(\n    () =>\n      new Promise((fulfill) => {\n        unlockFunctionForKey[key] = fulfill;\n      })\n  );\n\n  return takeLockPromise;\n}\n\nfunction unlock(key: string) {\n  if (unlockFunctionForKey[key]) {\n    unlockFunctionForKey[key]();\n    delete unlockFunctionForKey[key];\n  }\n}\n"],"names":["wrapFetchWithCache","debug","require","fetch","cache","cachedFetch","url","init","cacheKey","getRequestCacheKey","cachedResponse","get","Response","body","info","lock","response","ok","set","getResponseInfo","remove","unlock","lockPromiseForKey","unlockFunctionForKey","key","Promise","resolve","takeLockPromise","then","fulfill"],"mappings":"AAAA;;;;+BAOgBA,oBAAkB;;aAAlBA,kBAAkB;;;yBAP2B,QAAQ;;;;;;+BAEG,iBAAiB;AAGzF,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,AAAC;AAE7C,SAASF,kBAAkB,CAACG,KAAgB,EAAEC,KAAoB,EAAa;IACpF,OAAO,eAAeC,WAAW,CAACC,GAAgB,EAAEC,IAAkB,EAAE;QACtE,MAAMC,QAAQ,GAAGC,IAAAA,cAAkB,mBAAA,EAACH,GAAG,EAAEC,IAAI,CAAC,AAAC;QAC/C,MAAMG,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACH,QAAQ,CAAC,AAAC;QACjD,IAAIE,cAAc,EAAE;YAClB,OAAO,IAAIE,CAAAA,OAAQ,EAAA,CAAA,SAAA,CAACF,cAAc,CAACG,IAAI,EAAEH,cAAc,CAACI,IAAI,CAAC,CAAC;QAChE,CAAC;QAED,MAAMC,IAAI,CAACP,QAAQ,CAAC,CAAC;QAErB,IAAI;YACF,kEAAkE;YAClE,IAAIE,eAAc,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACH,QAAQ,CAAC,AAAC;YAC/C,IAAIE,eAAc,EAAE;gBAClB,OAAO,IAAIE,CAAAA,OAAQ,EAAA,CAAA,SAAA,CAACF,eAAc,CAACG,IAAI,EAAEH,eAAc,CAACI,IAAI,CAAC,CAAC;YAChE,CAAC;YAED,4BAA4B;YAC5B,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACG,GAAG,EAAEC,IAAI,CAAC,AAAC;YACxC,IAAI,CAACS,QAAQ,CAACC,EAAE,IAAI,CAACD,QAAQ,CAACH,IAAI,EAAE;gBAClC,OAAOG,QAAQ,CAAC;YAClB,CAAC;YAED,qBAAqB;YACrBN,eAAc,GAAG,MAAMN,KAAK,CAACc,GAAG,CAACV,QAAQ,EAAE;gBACzCK,IAAI,EAAEG,QAAQ,CAACH,IAAI;gBACnBC,IAAI,EAAEK,IAAAA,cAAe,gBAAA,EAACH,QAAQ,CAAC;aAChC,CAAC,CAAC;YAEH,8CAA8C;YAC9C,IAAI,CAACN,eAAc,EAAE;gBACnBT,KAAK,CAAC,CAAC,8BAA8B,EAAEK,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAMF,KAAK,CAACgB,MAAM,CAACZ,QAAQ,CAAC,CAAC;gBAC7B,OAAOQ,QAAQ,CAAC;YAClB,CAAC;YAED,6BAA6B;YAC7B,OAAO,IAAIJ,CAAAA,OAAQ,EAAA,CAAA,SAAA,CAACF,eAAc,CAACG,IAAI,EAAEH,eAAc,CAACI,IAAI,CAAC,CAAC;QAChE,SAAU;YACRO,MAAM,CAACb,QAAQ,CAAC,CAAC;QACnB,CAAC;IACH,CAAC,CAAC;AACJ,CAAC;AAED,MAAMc,iBAAiB,GAAiC,EAAE,AAAC;AAC3D,MAAMC,oBAAoB,GAAwB,EAAE,AAAC;AAErD,eAAeR,IAAI,CAACS,GAAW,EAAE;IAC/B,IAAI,CAACF,iBAAiB,CAACE,GAAG,CAAC,EAAE;QAC3BF,iBAAiB,CAACE,GAAG,CAAC,GAAGC,OAAO,CAACC,OAAO,EAAE,CAAC;IAC7C,CAAC;IAED,MAAMC,eAAe,GAAGL,iBAAiB,CAACE,GAAG,CAAC,AAAC;IAC/CF,iBAAiB,CAACE,GAAG,CAAC,GAAGG,eAAe,CAACC,IAAI,CAC3C,IACE,IAAIH,OAAO,CAAC,CAACI,OAAO,GAAK;YACvBN,oBAAoB,CAACC,GAAG,CAAC,GAAGK,OAAO,CAAC;QACtC,CAAC,CAAC,CACL,CAAC;IAEF,OAAOF,eAAe,CAAC;AACzB,CAAC;AAED,SAASN,MAAM,CAACG,GAAW,EAAE;IAC3B,IAAID,oBAAoB,CAACC,GAAG,CAAC,EAAE;QAC7BD,oBAAoB,CAACC,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAOD,oBAAoB,CAACC,GAAG,CAAC,CAAC;IACnC,CAAC;AACH,CAAC"}