{"version":3,"sources":["../../../src/prebuild/ensureConfigAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\n\nimport {\n  getOrPromptForBundleIdentifier,\n  getOrPromptForPackage,\n} from '../utils/getOrPromptApplicationId';\n\n/** Ensure config is written, and prompts for application identifiers. */\nexport async function ensureConfigAsync(\n  projectRoot: string,\n  {\n    platforms,\n  }: {\n    platforms: ModPlatform[];\n  }\n): Promise<{ exp: ExpoConfig; pkg: PackageJSONConfig }> {\n  // Prompt for the Android package first because it's more strict than the bundle identifier\n  // this means you'll have a better chance at matching the bundle identifier with the package name.\n  if (platforms.includes('android')) {\n    await getOrPromptForPackage(projectRoot);\n  }\n\n  if (platforms.includes('ios')) {\n    await getOrPromptForBundleIdentifier(projectRoot);\n  }\n\n  // Read config again because prompting for bundle id or package name may have mutated the results.\n  return getConfig(projectRoot);\n}\n"],"names":["ensureConfigAsync","projectRoot","platforms","includes","getOrPromptForPackage","getOrPromptForBundleIdentifier","getConfig"],"mappings":"AAAA;;;;+BASsBA,mBAAiB;;aAAjBA,iBAAiB;;;yBATkB,cAAc;;;;;;0CAMhE,mCAAmC;AAGnC,eAAeA,iBAAiB,CACrCC,WAAmB,EACnB,EACEC,SAAS,CAAA,EAGV,EACqD;IACtD,2FAA2F;IAC3F,kGAAkG;IAClG,IAAIA,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACjC,MAAMC,IAAAA,yBAAqB,sBAAA,EAACH,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,IAAIC,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAME,IAAAA,yBAA8B,+BAAA,EAACJ,WAAW,CAAC,CAAC;IACpD,CAAC;IAED,kGAAkG;IAClG,OAAOK,IAAAA,OAAS,EAAA,UAAA,EAACL,WAAW,CAAC,CAAC;AAChC,CAAC"}