{"version":3,"sources":["../../../src/prebuild/resolveOptions.ts"],"sourcesContent":["import { ModPlatform } from '@expo/config-plugins';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\nimport { validateUrl } from '../utils/url';\n\nconst debug = require('debug')('expo:prebuild:resolveOptions') as typeof console.log;\n\nexport interface ResolvedTemplateOption {\n  type: 'file' | 'npm' | 'repository';\n  uri: string;\n}\n\nexport function resolvePackageManagerOptions(args: any) {\n  const managers: Record<string, boolean> = {\n    npm: args['--npm'],\n    yarn: args['--yarn'],\n    pnpm: args['--pnpm'],\n    bun: args['--bun'],\n  };\n\n  if (\n    [managers.npm, managers.pnpm, managers.yarn, managers.bun, !!args['--no-install']].filter(\n      Boolean\n    ).length > 1\n  ) {\n    throw new CommandError(\n      'BAD_ARGS',\n      'Specify at most one of: --no-install, --npm, --pnpm, --yarn, --bun'\n    );\n  }\n\n  return managers;\n}\n\n/** Resolves a template option as a URL or file path pointing to a tar file. */\nexport function resolveTemplateOption(template: string): ResolvedTemplateOption {\n  assert(template, 'template is required');\n\n  if (template.startsWith('https://') || template.startsWith('http://')) {\n    if (!validateUrl(template)) {\n      throw new CommandError('BAD_ARGS', 'Invalid URL provided as a template');\n    }\n    debug('Resolved template to repository path:', template);\n    return { type: 'repository', uri: template };\n  }\n\n  if (\n    // Supports `file:./path/to/template.tgz`\n    template.startsWith('file:') ||\n    // Supports `../path/to/template.tgz`\n    template.startsWith('.') ||\n    // Supports `\\\\path\\\\to\\\\template.tgz`\n    template.startsWith(path.sep)\n  ) {\n    let resolvedUri = template;\n    if (resolvedUri.startsWith('file:')) {\n      resolvedUri = resolvedUri.substring(5);\n    }\n    const templatePath = path.resolve(resolvedUri);\n    assert(fs.existsSync(templatePath), 'template file does not exist: ' + templatePath);\n    assert(\n      fs.statSync(templatePath).isFile(),\n      'template must be a tar file created by running `npm pack` in a project: ' + templatePath\n    );\n\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  if (fs.existsSync(template)) {\n    // Backward compatible with the old local template argument, e.g. `--template dir/template.tgz`\n    const templatePath = path.resolve(template);\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  debug(`Resolved template to NPM package:`, template);\n  return { type: 'npm', uri: template };\n}\n\n/** Resolves dependencies to skip from a string joined by `,`. Example: `react-native,expo,lodash` */\nexport function resolveSkipDependencyUpdate(value: any) {\n  if (!value || typeof value !== 'string') {\n    return [];\n  }\n  return value.split(',');\n}\n\n/** Returns an array of platforms based on the input platform identifier and runtime constraints. */\nexport function resolvePlatformOption(\n  platform: string = 'all',\n  { loose }: { loose?: boolean } = {}\n): ModPlatform[] {\n  switch (platform) {\n    case 'ios':\n      return ['ios'];\n    case 'android':\n      return ['android'];\n    case 'all':\n      return loose || process.platform !== 'win32' ? ['android', 'ios'] : ['android'];\n    default:\n      return [platform as ModPlatform];\n  }\n}\n\n/** Warns and filters out unsupported platforms based on the runtime constraints. Essentially this means no iOS on Windows devices. */\nexport function ensureValidPlatforms(platforms: ModPlatform[]): ModPlatform[] {\n  // Skip prebuild for iOS on Windows\n  if (process.platform === 'win32' && platforms.includes('ios')) {\n    Log.warn(\n      chalk`⚠️  Skipping generating the iOS native project files. Run {bold npx expo prebuild} again from macOS or Linux to generate the iOS project.\\n`\n    );\n    return platforms.filter((platform) => platform !== 'ios');\n  }\n  return platforms;\n}\n\n/** Asserts platform length must be greater than zero. */\nexport function assertPlatforms(platforms: ModPlatform[]) {\n  if (!platforms?.length) {\n    throw new CommandError('At least one platform must be enabled when syncing');\n  }\n}\n"],"names":["resolvePackageManagerOptions","resolveTemplateOption","resolveSkipDependencyUpdate","resolvePlatformOption","ensureValidPlatforms","assertPlatforms","debug","require","args","managers","npm","yarn","pnpm","bun","filter","Boolean","length","CommandError","template","assert","startsWith","validateUrl","type","uri","path","sep","resolvedUri","substring","templatePath","resolve","fs","existsSync","statSync","isFile","value","split","platform","loose","process","platforms","includes","Log","warn","chalk"],"mappings":"AAAA;;;;;;;;;;;IAiBgBA,4BAA4B,MAA5BA,4BAA4B;IAuB5BC,qBAAqB,MAArBA,qBAAqB;IA8CrBC,2BAA2B,MAA3BA,2BAA2B;IAQ3BC,qBAAqB,MAArBA,qBAAqB;IAiBrBC,oBAAoB,MAApBA,oBAAoB;IAYpBC,eAAe,MAAfA,eAAe;;;8DA1HZ,QAAQ;;;;;;;8DACT,OAAO;;;;;;;8DACV,IAAI;;;;;;;8DACF,MAAM;;;;;;2DAEF,QAAQ;wBACA,iBAAiB;qBAClB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1C,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,8BAA8B,CAAC,AAAsB,AAAC;AAO9E,SAASP,4BAA4B,CAACQ,IAAS,EAAE;IACtD,MAAMC,QAAQ,GAA4B;QACxCC,GAAG,EAAEF,IAAI,CAAC,OAAO,CAAC;QAClBG,IAAI,EAAEH,IAAI,CAAC,QAAQ,CAAC;QACpBI,IAAI,EAAEJ,IAAI,CAAC,QAAQ,CAAC;QACpBK,GAAG,EAAEL,IAAI,CAAC,OAAO,CAAC;KACnB,AAAC;IAEF,IACE;QAACC,QAAQ,CAACC,GAAG;QAAED,QAAQ,CAACG,IAAI;QAAEH,QAAQ,CAACE,IAAI;QAAEF,QAAQ,CAACI,GAAG;QAAE,CAAC,CAACL,IAAI,CAAC,cAAc,CAAC;KAAC,CAACM,MAAM,CACvFC,OAAO,CACR,CAACC,MAAM,GAAG,CAAC,EACZ;QACA,MAAM,IAAIC,OAAY,aAAA,CACpB,UAAU,EACV,oEAAoE,CACrE,CAAC;IACJ,CAAC;IAED,OAAOR,QAAQ,CAAC;AAClB,CAAC;AAGM,SAASR,qBAAqB,CAACiB,QAAgB,EAA0B;IAC9EC,IAAAA,OAAM,EAAA,QAAA,EAACD,QAAQ,EAAE,sBAAsB,CAAC,CAAC;IAEzC,IAAIA,QAAQ,CAACE,UAAU,CAAC,UAAU,CAAC,IAAIF,QAAQ,CAACE,UAAU,CAAC,SAAS,CAAC,EAAE;QACrE,IAAI,CAACC,IAAAA,IAAW,YAAA,EAACH,QAAQ,CAAC,EAAE;YAC1B,MAAM,IAAID,OAAY,aAAA,CAAC,UAAU,EAAE,oCAAoC,CAAC,CAAC;QAC3E,CAAC;QACDX,KAAK,CAAC,uCAAuC,EAAEY,QAAQ,CAAC,CAAC;QACzD,OAAO;YAAEI,IAAI,EAAE,YAAY;YAAEC,GAAG,EAAEL,QAAQ;SAAE,CAAC;IAC/C,CAAC;IAED,IACE,yCAAyC;IACzCA,QAAQ,CAACE,UAAU,CAAC,OAAO,CAAC,IAC5B,qCAAqC;IACrCF,QAAQ,CAACE,UAAU,CAAC,GAAG,CAAC,IACxB,sCAAsC;IACtCF,QAAQ,CAACE,UAAU,CAACI,KAAI,EAAA,QAAA,CAACC,GAAG,CAAC,EAC7B;QACA,IAAIC,WAAW,GAAGR,QAAQ,AAAC;QAC3B,IAAIQ,WAAW,CAACN,UAAU,CAAC,OAAO,CAAC,EAAE;YACnCM,WAAW,GAAGA,WAAW,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,MAAMC,YAAY,GAAGJ,KAAI,EAAA,QAAA,CAACK,OAAO,CAACH,WAAW,CAAC,AAAC;QAC/CP,IAAAA,OAAM,EAAA,QAAA,EAACW,GAAE,EAAA,QAAA,CAACC,UAAU,CAACH,YAAY,CAAC,EAAE,gCAAgC,GAAGA,YAAY,CAAC,CAAC;QACrFT,IAAAA,OAAM,EAAA,QAAA,EACJW,GAAE,EAAA,QAAA,CAACE,QAAQ,CAACJ,YAAY,CAAC,CAACK,MAAM,EAAE,EAClC,0EAA0E,GAAGL,YAAY,CAC1F,CAAC;QAEFtB,KAAK,CAAC,CAAC,+BAA+B,CAAC,EAAEsB,YAAY,CAAC,CAAC;QACvD,OAAO;YAAEN,IAAI,EAAE,MAAM;YAAEC,GAAG,EAAEK,YAAY;SAAE,CAAC;IAC7C,CAAC;IAED,IAAIE,GAAE,EAAA,QAAA,CAACC,UAAU,CAACb,QAAQ,CAAC,EAAE;QAC3B,+FAA+F;QAC/F,MAAMU,aAAY,GAAGJ,KAAI,EAAA,QAAA,CAACK,OAAO,CAACX,QAAQ,CAAC,AAAC;QAC5CZ,KAAK,CAAC,CAAC,+BAA+B,CAAC,EAAEsB,aAAY,CAAC,CAAC;QACvD,OAAO;YAAEN,IAAI,EAAE,MAAM;YAAEC,GAAG,EAAEK,aAAY;SAAE,CAAC;IAC7C,CAAC;IAEDtB,KAAK,CAAC,CAAC,iCAAiC,CAAC,EAAEY,QAAQ,CAAC,CAAC;IACrD,OAAO;QAAEI,IAAI,EAAE,KAAK;QAAEC,GAAG,EAAEL,QAAQ;KAAE,CAAC;AACxC,CAAC;AAGM,SAAShB,2BAA2B,CAACgC,KAAU,EAAE;IACtD,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QACvC,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,OAAOA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1B,CAAC;AAGM,SAAShC,qBAAqB,CACnCiC,QAAgB,GAAG,KAAK,EACxB,EAAEC,KAAK,CAAA,EAAuB,GAAG,EAAE,EACpB;IACf,OAAQD,QAAQ;QACd,KAAK,KAAK;YACR,OAAO;gBAAC,KAAK;aAAC,CAAC;QACjB,KAAK,SAAS;YACZ,OAAO;gBAAC,SAAS;aAAC,CAAC;QACrB,KAAK,KAAK;YACR,OAAOC,KAAK,IAAIC,OAAO,CAACF,QAAQ,KAAK,OAAO,GAAG;gBAAC,SAAS;gBAAE,KAAK;aAAC,GAAG;gBAAC,SAAS;aAAC,CAAC;QAClF;YACE,OAAO;gBAACA,QAAQ;aAAgB,CAAC;KACpC;AACH,CAAC;AAGM,SAAShC,oBAAoB,CAACmC,SAAwB,EAAiB;IAC5E,mCAAmC;IACnC,IAAID,OAAO,CAACF,QAAQ,KAAK,OAAO,IAAIG,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC7DC,IAAG,CAACC,IAAI,CACNC,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,2IAA2I,CAAC,CACnJ,CAAC;QACF,OAAOJ,SAAS,CAACzB,MAAM,CAAC,CAACsB,QAAQ,GAAKA,QAAQ,KAAK,KAAK,CAAC,CAAC;IAC5D,CAAC;IACD,OAAOG,SAAS,CAAC;AACnB,CAAC;AAGM,SAASlC,eAAe,CAACkC,SAAwB,EAAE;IACxD,IAAI,CAACA,CAAAA,SAAS,QAAQ,GAAjBA,KAAAA,CAAiB,GAAjBA,SAAS,CAAEvB,MAAM,CAAA,EAAE;QACtB,MAAM,IAAIC,OAAY,aAAA,CAAC,oDAAoD,CAAC,CAAC;IAC/E,CAAC;AACH,CAAC"}