{"version":3,"sources":["../../../../src/export/embed/exportEager.ts"],"sourcesContent":["import { exportEmbedInternalAsync } from './exportEmbedAsync';\nimport { getExportEmbedOptionsKey, resolveEagerOptionsAsync } from './resolveOptions';\nimport { env } from '../../utils/env';\n\nconst debug = require('debug')('expo:eager');\n\nexport async function exportEagerAsync(\n  projectRoot: string,\n  {\n    dev,\n    platform,\n  }: {\n    dev: boolean;\n    platform: string;\n  }\n) {\n  const options = await resolveEagerOptionsAsync(projectRoot, {\n    dev,\n    platform,\n    // We default to resetting the cache in non-CI environments since prebundling overwrites the cache reset later.\n    resetCache: !env.CI,\n  });\n  debug('Starting eager export: ' + options.bundleOutput);\n\n  await exportEmbedInternalAsync(projectRoot, options);\n\n  debug('Eager export complete');\n\n  return { options, key: getExportEmbedOptionsKey(options) };\n}\n"],"names":["exportEagerAsync","debug","require","projectRoot","dev","platform","options","resolveEagerOptionsAsync","resetCache","env","CI","bundleOutput","exportEmbedInternalAsync","key","getExportEmbedOptionsKey"],"mappings":"AAAA;;;;+BAMsBA,kBAAgB;;aAAhBA,gBAAgB;;kCANG,oBAAoB;gCACM,kBAAkB;qBACjE,iBAAiB;AAErC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,AAAC;AAEtC,eAAeF,gBAAgB,CACpCG,WAAmB,EACnB,EACEC,GAAG,CAAA,EACHC,QAAQ,CAAA,EAIT,EACD;IACA,MAAMC,OAAO,GAAG,MAAMC,IAAAA,eAAwB,yBAAA,EAACJ,WAAW,EAAE;QAC1DC,GAAG;QACHC,QAAQ;QACR,+GAA+G;QAC/GG,UAAU,EAAE,CAACC,IAAG,IAAA,CAACC,EAAE;KACpB,CAAC,AAAC;IACHT,KAAK,CAAC,yBAAyB,GAAGK,OAAO,CAACK,YAAY,CAAC,CAAC;IAExD,MAAMC,IAAAA,iBAAwB,yBAAA,EAACT,WAAW,EAAEG,OAAO,CAAC,CAAC;IAErDL,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAE/B,OAAO;QAAEK,OAAO;QAAEO,GAAG,EAAEC,IAAAA,eAAwB,yBAAA,EAACR,OAAO,CAAC;KAAE,CAAC;AAC7D,CAAC"}